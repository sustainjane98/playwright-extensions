"use strict";(self.webpackChunk_playwright_extensions_source=self.webpackChunk_playwright_extensions_source||[]).push([[942],{4981:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var i=n(4848),s=n(8453);const o={sidebar_position:1,sidebar_label:"Waiting for optional Elements"},l="Waiting for optional Elements",r={id:"tutorial-basics/waiting-for-optional-elements/index",title:"Waiting for optional Elements",description:"Let's discover the possibility to easily wait for optional available elements. So if it isn't available until a timeout you can skip the part.",source:"@site/docs/tutorial-basics/waiting-for-optional-elements/index.mdx",sourceDirName:"tutorial-basics/waiting-for-optional-elements",slug:"/tutorial-basics/waiting-for-optional-elements/",permalink:"/playwright-extensions/docs/tutorial-basics/waiting-for-optional-elements/",draft:!1,unlisted:!1,editUrl:"https://github.com/sustainjane98/playwright-extensions/edit/main/apps/documentation/docs/tutorial-basics/waiting-for-optional-elements/index.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Waiting for optional Elements"},sidebar:"tutorialSidebar",previous:{title:"Basic Functionality",permalink:"/playwright-extensions/docs/category/basic-functionality"}},a={},c=[{value:"Waiting for single elements",id:"waiting-for-single-elements",level:2},{value:"Wait for Selectors",id:"wait-for-selectors",level:3},{value:"Usage",id:"usage",level:4},{value:"Options",id:"options",level:4},{value:"Wait for Locators",id:"wait-for-locators",level:3},{value:"Usage",id:"usage-1",level:4},{value:"Options",id:"options-1",level:4}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"waiting-for-optional-elements",children:"Waiting for optional Elements"}),"\n",(0,i.jsx)(t.p,{children:"Let's discover the possibility to easily wait for optional available elements. So if it isn't available until a timeout you can skip the part."}),"\n",(0,i.jsx)(t.h2,{id:"waiting-for-single-elements",children:"Waiting for single elements"}),"\n",(0,i.jsx)(t.h3,{id:"wait-for-selectors",children:"Wait for Selectors"}),"\n",(0,i.jsxs)(t.p,{children:["Playwright Extensions allow you to wait for single elements to appear before interacting with them, ensuring reliable script execution. By using the ",(0,i.jsx)(t.code,{children:"waitForSelector"})," function with a specified timeout, you can wait for elements to become visible and interactable, enhancing the stability and robustness of your automated tests."]}),"\n",(0,i.jsx)(t.h4,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"import { expect, mergeTests } from '@playwright/test';\nimport {playwrightExtensions} from 'playwright-extensions';\nimport { common } from '@test/pages';\n\nconst test = mergeTests(playwrightExtensions, common);\n\ntest.describe('Wait for Selectors', () => {\n\n  test('Wait for Selector without soft error', async ({ playwrightExtensions, page }) => {\n    const selector = 'html body h2';\n\n    await playwrightExtensions.waitForSelector(selector, { timeout: 6000 });\n\n    await expect(page.locator(selector)).toBeDefined();\n  });\n});\n"})}),"\n",(0,i.jsx)(t.h4,{id:"options",children:"Options"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)("p",{children:[(0,i.jsx)(t.code,{children:"options"})," ",(0,i.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",children:"Object"})," (optional)"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"timeout"})," ",(0,i.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",children:"number"}),"\n",(0,i.jsxs)("p",{children:["Maximum time in milliseconds. Defaults to 0 - no timeout. Defines the time until the ",(0,i.jsx)(t.code,{children:"state"})," should be true "]})]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)("p",{children:[(0,i.jsx)(t.code,{children:"state"}),' "attached" | "detached" | "visible" | "hidden"']}),"\n",(0,i.jsxs)("p",{children:["Defaults to ",(0,i.jsx)(t.code,{children:"visible"}),". Can be either:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"attached"})," - wait for the element to be present in the DOM."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"detached"})," - wait for the element to be removed from the DOM."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"visible"})," - wait for the element to be present in the DOM and to be visible."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"hidden"})," - wait for the element to not be found in the DOM or to be hidden."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"wait-for-locators",children:"Wait for Locators"}),"\n",(0,i.jsx)(t.p,{children:"Playwright Extensions can also wait for locators, providing a powerful way to handle dynamic web content. By leveraging the locator method, you can wait for elements matching a specific locator to appear, ensuring your interactions are precise and reliable. This enhances the flexibility and robustness of your automated scripts when dealing with complex and changing web pages."}),"\n",(0,i.jsx)(t.h4,{id:"usage-1",children:"Usage"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"import { Locator, expect, mergeTests } from '@playwright/test';\nimport { common } from '@test/pages';\nimport { TestIds } from '@test/ids';\nimport { playwrightExtensions } from 'playwright-extensions';\n\nconst test = mergeTests(common, playwrightExtensions);\n\ntest.describe('Wait For Extensions Test', () => {\n  test('Wait for any of two subHeadlines Timeout', async ({\n    playwrightExtensions,\n    page,\n  }) => {\n    const subHeadline = page.locator('html').locator('body').getByText('Test124');\n\n    await playwrightExtensions.waitFor(\n      subHeadline,\n      { timeout: 6000 }\n    );\n\n    await expect(subHeadline).toHaveCount(1);\n  });\n});\n"})}),"\n",(0,i.jsx)(t.h4,{id:"options-1",children:"Options"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)("p",{children:[(0,i.jsx)(t.code,{children:"options"})," ",(0,i.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",children:"Object"})," (optional)"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"timeout"})," ",(0,i.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",children:"number"}),"\n",(0,i.jsxs)("p",{children:["Maximum time in milliseconds. Defaults to 0 - no timeout. Defines the time until the ",(0,i.jsx)(t.code,{children:"state"})," should be true "]})]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)("p",{children:[(0,i.jsx)(t.code,{children:"state"}),' "attached" | "detached" | "visible" | "hidden"']}),"\n",(0,i.jsxs)("p",{children:["Defaults to ",(0,i.jsx)(t.code,{children:"visible"}),". Can be either:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"attached"})," - wait for the element to be present in the DOM."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"detached"})," - wait for the element to be removed from the DOM."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"visible"})," - wait for the element to be present in the DOM and to be visible."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"hidden"})," - wait for the element to not be found in the DOM or to be hidden."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>r});var i=n(6540);const s={},o=i.createContext(s);function l(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);